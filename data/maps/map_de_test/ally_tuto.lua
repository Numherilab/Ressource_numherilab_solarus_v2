--[[
ü§ñ Cr√©er un PNJ alli√© qui suit le h√©ros pas √† pas
üìå Objectif
Dans ce tutoriel, nous allons apprendre √† faire appara√Ætre un alli√© qui suit le h√©ros en file indienne, comme dans Earthbound ou Secret of Mana. Ce syst√®me utilise un buffer de position du h√©ros pour que notre alli√© imite ses mouvements avec un l√©ger d√©calage.

1Ô∏è‚É£ Pr√©parer les fichiers
A. Fichier de l‚Äôalli√©
Cr√©e un fichier dans scripts/ avec le nom de ton pnj.lua  le mien est dans le dossier scripts/action/boubou_ally.lua

Colle ce script :


local boubou_ally = {}

function boubou_ally:summon(hero)
  local map = hero:get_map()
  local x, y, layer = hero:get_position()
  
  map:create_custom_entity{
    x = x,
    y = y,
    layer = layer,
    direction = 3,
    width = 16,
    height = 16,
    sprite = "npc/billy",  -- Le sprite utilis√© pour ton alli√©
    model = "ally",        -- Mod√®le que l‚Äôon d√©finira juste apr√®s
    name = "boubou_ally"
  }
end

return boubou_ally


üìù Pense √† bien nommer ton NPC sur la carte exactement comme le champ name.

üìÅ scripts/action/boubou_ally.lua ‚Äî Le script d‚Äôinvocation de l‚Äôalli√©
Ce fichier sert √† cr√©er l‚Äôalli√© (un custom entity) √† c√¥t√© du h√©ros quand on le souhaite, par exemple pendant un √©v√©nement ou via une commande.

üìå Contenu du script

local boubou_ally = {}

function boubou_ally:summon(hero)
  local map = hero:get_map()
  local x, y, layer = hero:get_position()
  
  map:create_custom_entity{
    x = x,
    y = y,
    layer = layer,
    direction = 3,
    width = 16,
    height = 16,
    sprite = "npc/billy",  -- Le sprite visuel du PNJ
    model = "ally",        -- Le comportement d√©fini dans custom_entities/ally.lua
    name = "boubou_ally"   -- Nom de l'entit√© sur la carte
  }
end

return boubou_ally

üîç Ligne par ligne
1. local boubou_ally = {}
On cr√©e une table Lua pour encapsuler le comportement de notre alli√©.

2. function boubou_ally:summon(hero)
Cette fonction permet d‚Äôinvoquer l‚Äôalli√© sur la carte √† partir du h√©ros.

3. local map = hero:get_map()
On r√©cup√®re la carte o√π se trouve actuellement le h√©ros.

4. local x, y, layer = hero:get_position()
On r√©cup√®re la position actuelle du h√©ros.

5. map:create_custom_entity{ ... }
On cr√©e un custom entity sur la carte avec :

x, y, layer : √† la m√™me position que le h√©ros

sprite = "npc/billy" : sprite √† afficher (√† adapter √† ton projet)

model = "ally" : mod√®le qui d√©finit le comportement (dans custom_entities/ally.lua)

name = "boubou_ally" : nom de l'entit√© (important si tu veux l'appeler ailleurs !)

üß™ En pratique
Tu peux appeler ce fichier depuis un autre script ou une action :


require("scripts/boubou_ally"):summon(hero)
Cela creera automatiquement l'entities custom. tu n'auras donc pas √† la mettre toi m√™me sur la carte

Et hop ‚ú® ton petit compagnon appara√Æt juste derri√®re toi, pr√™t √† te suivre !

Tu veux que je t‚Äôaide √† r√©diger une partie 2 du tuto pour ajouter un d√©clencheur (comme une touche ou un √©v√©nement de carte) ?







Demander √† ChatGPT





ChatGPT peut commettre des erreurs. Il est recommand√© de v√©rifier les informations importantes. Voir les pr√©f

2Ô∏è‚É£ Cr√©er le mod√®le ally dans custom_entities
Dans le fichier custom_entities/ally.lua, ins√®re ce script :

lua
Copier
Modifier
local entity = ...
local game = entity:get_game()
local map = entity:get_map()
local hero = map:get_hero()
local sprite
local in_water
local step_delay = 24

function entity:on_created()
  sprite = entity:get_sprite()
  sprite:set_animation("walking")
  entity:set_drawn_in_y_order(true)
  entity:set_can_traverse_ground("shallow_water", true)
  entity:follow_hero_single_file()
  sol.timer.start(map, 20, function()
    entity:follow_hero_single_file()
    return true
  end)
end

function entity:follow_hero_single_file()
  if not hero.position_buffer then hero.position_buffer = {} end
  if #hero.position_buffer >= step_delay then
    entity:set_position(
      hero.position_buffer[step_delay].x,
      hero.position_buffer[step_delay].y,
      hero.position_buffer[step_delay].layer)
    entity:get_sprite():set_direction(hero.position_buffer[step_delay].direction)
  end
end

function entity:on_position_changed()
  local ground = entity:get_ground_below()
  if not in_water and ground == "shallow_water" then
    in_water = true 
    entity:create_sprite("hero/ground2", "water_sprite")
  elseif in_water and ground ~= "shallow_water" then
    in_water = false
    entity:remove_sprite(entity:get_sprite("water_sprite"))
  end
end
3Ô∏è‚É£ √âtendre le h√©ros pour fournir sa position √† l‚Äôalli√©
Dans scripts/hero.lua, ajoute ce code :

lua
Copier
Modifier
local hero_meta = sol.main.get_metatable("hero")

local MAX_BUFFER_SIZE = 50

function hero_meta:on_position_changed(x, y, layer)
  local hero = self
  
  if not hero.position_buffer then 
    hero.position_buffer = {} 
  end
  
  local direction = hero:get_sprite():get_direction()
  
  table.insert(hero.position_buffer, 1, {
    x = x,
    y = y,
    layer = layer,
    direction = direction
  })
  
  if #hero.position_buffer > MAX_BUFFER_SIZE then
    table.remove(hero.position_buffer)
  end
end

return true
4Ô∏è‚É£ N‚Äôoublie pas !
Active le script du h√©ros dans scripts/features.lua :

lua
Copier
Modifier
require("scripts/hero")
Et appelle ton fichier boubou_ally.lua quand tu veux faire appara√Ætre l‚Äôalli√© (par exemple dans une cin√©matique, une action, ou un test via un interrupteur). --]]

